春に解説pdfを見ても全く意味がわからなくてずっと放置してて、さっき解説放送見たらやっと理解できた
勉強になる問題だった

*** 問題
あるラーメン屋はn種類のトッピングを提供している
各トッピングは乗せるか乗せないかを選べて、2^n通りのラーメンが注文できる
ここで、
1) トッピングの組み合わせが全く同じラーメンを複数注文しない
2) n種類のトッピングそれぞれが注文したラーメンのうち2杯以上に乗っている
という2つの条件を満たすようにラーメンを何杯か注文したい
そのような注文の仕方の総数を求めよ

2 <= n <= 3000

*** 解法
求めたいものは
「"n個の要素からなる集合S" の部分集合2^n個からなる集合Tの部分集合Uのうち、Sの全ての要素がUの2個以上の互いに異なる要素に属するようなものの個数」
と言い換えられる
(Uは 2^(2^n) 個存在する)
2個以上のグループに属するというのはあまりにも求めづらいので、
f(k): Sのうち1個以下のグループに属するような要素がk個以上存在するようなグループ分けの仕方の個数 (残りn-k個は何個のグループに属してもいい)
とし、包除原理を用いると、答えは
Σ nCk * f(k) * (-1)^k (0 <= k <= n)
となる

次にf(k)を求めたい
n-k個は何個のグループに属しててもいいから、グループへの入れ方は 2^(2^(n-k)) 通りある
グループがx個あるとして、
dp[k][x]: k個の要素を(各要素が1個以下のグループに属するように)x個のグループに分ける場合の数
とすると、x個のグループそれぞれがn-k個の要素のうちどれを含むかというのが 2^(n-k)x 通りあるから
f(k) = Σ dp[k][x] * 2^(n-k)x * 2^(2^(n-k)) (0 <= x <= k)
となる

今度はdp[k][x]を求めたい
これは第二種スターリング数ってのとめっちゃ似てて、↓の遷移で求められる
dp[k][x] = dp[k-1][x-1] + dp[k-1][x] + dp[k-1][x]*x
第1項) 新しいグループを作ってそこにk個目の要素を入れる場合
第2項) k個目の要素をどのグループにも入れない場合
第3項) 既にあるx個のグループのどれか1つにk個目の要素を入れる場合

全部トータルでO(n^2)

*** 実装

>|cpp|

||<

前ARC-E埋めてるときも思ったけど、800点以下と900点以上の間にとんでもなく大きい壁を感じる
900点以上は初見で解ける人が宇宙人にしか見えないし、俺が自力で解けるようになる想像も今のところ全くできない
難しい問題に大量に触れれば変わっていくもんなのかなぁとはなんとなく思ってる
